// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContactsAccount contacts account
//
// swagger:model contacts_account
type ContactsAccount struct {

	// addrbook
	// Required: true
	Addrbook *ContactsAddrbook `json:"addrbook"`

	// Unique identifier for the current user
	// Required: true
	Userid *string `json:"userid"`
}

// Validate validates this contacts account
func (m *ContactsAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddrbook(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactsAccount) validateAddrbook(formats strfmt.Registry) error {

	if err := validate.Required("addrbook", "body", m.Addrbook); err != nil {
		return err
	}

	if m.Addrbook != nil {
		if err := m.Addrbook.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("addrbook")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("addrbook")
			}
			return err
		}
	}

	return nil
}

func (m *ContactsAccount) validateUserid(formats strfmt.Registry) error {

	if err := validate.Required("userid", "body", m.Userid); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this contacts account based on the context it is used
func (m *ContactsAccount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAddrbook(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactsAccount) contextValidateAddrbook(ctx context.Context, formats strfmt.Registry) error {

	if m.Addrbook != nil {
		if err := m.Addrbook.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("addrbook")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("addrbook")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContactsAccount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContactsAccount) UnmarshalBinary(b []byte) error {
	var res ContactsAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
