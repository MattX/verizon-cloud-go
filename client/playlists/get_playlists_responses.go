// Code generated by go-swagger; DO NOT EDIT.

package playlists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MattX/verizon-cloud-go/models"
)

// GetPlaylistsReader is a Reader for the GetPlaylists structure.
type GetPlaylistsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlaylistsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPlaylistsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPlaylistsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPlaylistsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPlaylistsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPlaylistsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPlaylistsOK creates a GetPlaylistsOK with default headers values
func NewGetPlaylistsOK() *GetPlaylistsOK {
	return &GetPlaylistsOK{}
}

/* GetPlaylistsOK describes a response with status code 200, with default header values.

OK
*/
type GetPlaylistsOK struct {
	Payload []*models.Playlist
}

func (o *GetPlaylistsOK) Error() string {
	return fmt.Sprintf("[GET /playlists][%d] getPlaylistsOK  %+v", 200, o.Payload)
}
func (o *GetPlaylistsOK) GetPayload() []*models.Playlist {
	return o.Payload
}

func (o *GetPlaylistsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlaylistsBadRequest creates a GetPlaylistsBadRequest with default headers values
func NewGetPlaylistsBadRequest() *GetPlaylistsBadRequest {
	return &GetPlaylistsBadRequest{}
}

/* GetPlaylistsBadRequest describes a response with status code 400, with default header values.

[Bad Request] Query parameters missing or invalid.
*/
type GetPlaylistsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetPlaylistsBadRequest) Error() string {
	return fmt.Sprintf("[GET /playlists][%d] getPlaylistsBadRequest  %+v", 400, o.Payload)
}
func (o *GetPlaylistsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlaylistsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlaylistsUnauthorized creates a GetPlaylistsUnauthorized with default headers values
func NewGetPlaylistsUnauthorized() *GetPlaylistsUnauthorized {
	return &GetPlaylistsUnauthorized{}
}

/* GetPlaylistsUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type GetPlaylistsUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetPlaylistsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /playlists][%d] getPlaylistsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetPlaylistsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlaylistsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlaylistsForbidden creates a GetPlaylistsForbidden with default headers values
func NewGetPlaylistsForbidden() *GetPlaylistsForbidden {
	return &GetPlaylistsForbidden{}
}

/* GetPlaylistsForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type GetPlaylistsForbidden struct {
	Payload *models.ErrorResponse
}

func (o *GetPlaylistsForbidden) Error() string {
	return fmt.Sprintf("[GET /playlists][%d] getPlaylistsForbidden  %+v", 403, o.Payload)
}
func (o *GetPlaylistsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlaylistsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlaylistsServiceUnavailable creates a GetPlaylistsServiceUnavailable with default headers values
func NewGetPlaylistsServiceUnavailable() *GetPlaylistsServiceUnavailable {
	return &GetPlaylistsServiceUnavailable{}
}

/* GetPlaylistsServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type GetPlaylistsServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *GetPlaylistsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /playlists][%d] getPlaylistsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetPlaylistsServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlaylistsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
