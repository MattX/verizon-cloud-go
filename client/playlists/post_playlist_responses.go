// Code generated by go-swagger; DO NOT EDIT.

package playlists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MattX/verizon-cloud-go/client/models"
)

// PostPlaylistReader is a Reader for the PostPlaylist structure.
type PostPlaylistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPlaylistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostPlaylistCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPlaylistBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostPlaylistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostPlaylistForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostPlaylistNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostPlaylistServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostPlaylistCreated creates a PostPlaylistCreated with default headers values
func NewPostPlaylistCreated() *PostPlaylistCreated {
	return &PostPlaylistCreated{}
}

/* PostPlaylistCreated describes a response with status code 201, with default header values.

Created
*/
type PostPlaylistCreated struct {
	Payload *models.Playlist
}

func (o *PostPlaylistCreated) Error() string {
	return fmt.Sprintf("[POST /playlists][%d] postPlaylistCreated  %+v", 201, o.Payload)
}
func (o *PostPlaylistCreated) GetPayload() *models.Playlist {
	return o.Payload
}

func (o *PostPlaylistCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Playlist)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlaylistBadRequest creates a PostPlaylistBadRequest with default headers values
func NewPostPlaylistBadRequest() *PostPlaylistBadRequest {
	return &PostPlaylistBadRequest{}
}

/* PostPlaylistBadRequest describes a response with status code 400, with default header values.

[Bad Request] Parameters missing or invalid.
*/
type PostPlaylistBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PostPlaylistBadRequest) Error() string {
	return fmt.Sprintf("[POST /playlists][%d] postPlaylistBadRequest  %+v", 400, o.Payload)
}
func (o *PostPlaylistBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostPlaylistBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlaylistUnauthorized creates a PostPlaylistUnauthorized with default headers values
func NewPostPlaylistUnauthorized() *PostPlaylistUnauthorized {
	return &PostPlaylistUnauthorized{}
}

/* PostPlaylistUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type PostPlaylistUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *PostPlaylistUnauthorized) Error() string {
	return fmt.Sprintf("[POST /playlists][%d] postPlaylistUnauthorized  %+v", 401, o.Payload)
}
func (o *PostPlaylistUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostPlaylistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlaylistForbidden creates a PostPlaylistForbidden with default headers values
func NewPostPlaylistForbidden() *PostPlaylistForbidden {
	return &PostPlaylistForbidden{}
}

/* PostPlaylistForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type PostPlaylistForbidden struct {
	Payload *models.ErrorResponse
}

func (o *PostPlaylistForbidden) Error() string {
	return fmt.Sprintf("[POST /playlists][%d] postPlaylistForbidden  %+v", 403, o.Payload)
}
func (o *PostPlaylistForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostPlaylistForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlaylistNotFound creates a PostPlaylistNotFound with default headers values
func NewPostPlaylistNotFound() *PostPlaylistNotFound {
	return &PostPlaylistNotFound{}
}

/* PostPlaylistNotFound describes a response with status code 404, with default header values.

[Not Found] Resource not found.
*/
type PostPlaylistNotFound struct {
	Payload *models.ErrorResponse
}

func (o *PostPlaylistNotFound) Error() string {
	return fmt.Sprintf("[POST /playlists][%d] postPlaylistNotFound  %+v", 404, o.Payload)
}
func (o *PostPlaylistNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostPlaylistNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPlaylistServiceUnavailable creates a PostPlaylistServiceUnavailable with default headers values
func NewPostPlaylistServiceUnavailable() *PostPlaylistServiceUnavailable {
	return &PostPlaylistServiceUnavailable{}
}

/* PostPlaylistServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type PostPlaylistServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *PostPlaylistServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /playlists][%d] postPlaylistServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostPlaylistServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostPlaylistServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
