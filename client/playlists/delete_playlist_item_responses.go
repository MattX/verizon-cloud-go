// Code generated by go-swagger; DO NOT EDIT.

package playlists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MattX/verizon-cloud-go/models"
)

// DeletePlaylistItemReader is a Reader for the DeletePlaylistItem structure.
type DeletePlaylistItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePlaylistItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePlaylistItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePlaylistItemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePlaylistItemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePlaylistItemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeletePlaylistItemServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeletePlaylistItemOK creates a DeletePlaylistItemOK with default headers values
func NewDeletePlaylistItemOK() *DeletePlaylistItemOK {
	return &DeletePlaylistItemOK{}
}

/* DeletePlaylistItemOK describes a response with status code 200, with default header values.

OK
*/
type DeletePlaylistItemOK struct {
}

func (o *DeletePlaylistItemOK) Error() string {
	return fmt.Sprintf("[DELETE /playlists/{playlistUid}/items/{itemUid}][%d] deletePlaylistItemOK ", 200)
}

func (o *DeletePlaylistItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePlaylistItemUnauthorized creates a DeletePlaylistItemUnauthorized with default headers values
func NewDeletePlaylistItemUnauthorized() *DeletePlaylistItemUnauthorized {
	return &DeletePlaylistItemUnauthorized{}
}

/* DeletePlaylistItemUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type DeletePlaylistItemUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *DeletePlaylistItemUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /playlists/{playlistUid}/items/{itemUid}][%d] deletePlaylistItemUnauthorized  %+v", 401, o.Payload)
}
func (o *DeletePlaylistItemUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlaylistItemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePlaylistItemForbidden creates a DeletePlaylistItemForbidden with default headers values
func NewDeletePlaylistItemForbidden() *DeletePlaylistItemForbidden {
	return &DeletePlaylistItemForbidden{}
}

/* DeletePlaylistItemForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type DeletePlaylistItemForbidden struct {
	Payload *models.ErrorResponse
}

func (o *DeletePlaylistItemForbidden) Error() string {
	return fmt.Sprintf("[DELETE /playlists/{playlistUid}/items/{itemUid}][%d] deletePlaylistItemForbidden  %+v", 403, o.Payload)
}
func (o *DeletePlaylistItemForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlaylistItemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePlaylistItemNotFound creates a DeletePlaylistItemNotFound with default headers values
func NewDeletePlaylistItemNotFound() *DeletePlaylistItemNotFound {
	return &DeletePlaylistItemNotFound{}
}

/* DeletePlaylistItemNotFound describes a response with status code 404, with default header values.

[Not Found] Resource not found.
*/
type DeletePlaylistItemNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DeletePlaylistItemNotFound) Error() string {
	return fmt.Sprintf("[DELETE /playlists/{playlistUid}/items/{itemUid}][%d] deletePlaylistItemNotFound  %+v", 404, o.Payload)
}
func (o *DeletePlaylistItemNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlaylistItemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePlaylistItemServiceUnavailable creates a DeletePlaylistItemServiceUnavailable with default headers values
func NewDeletePlaylistItemServiceUnavailable() *DeletePlaylistItemServiceUnavailable {
	return &DeletePlaylistItemServiceUnavailable{}
}

/* DeletePlaylistItemServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type DeletePlaylistItemServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *DeletePlaylistItemServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /playlists/{playlistUid}/items/{itemUid}][%d] deletePlaylistItemServiceUnavailable  %+v", 503, o.Payload)
}
func (o *DeletePlaylistItemServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePlaylistItemServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
