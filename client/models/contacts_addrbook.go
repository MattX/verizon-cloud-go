// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContactsAddrbook contacts addrbook
//
// swagger:model contacts_addrbook
type ContactsAddrbook struct {

	// contacts
	// Required: true
	Contacts *ContactsContacts `json:"contacts"`

	// Timestamp of latest update
	// Required: true
	Updated *string `json:"updated"`
}

// Validate validates this contacts addrbook
func (m *ContactsAddrbook) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContacts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdated(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactsAddrbook) validateContacts(formats strfmt.Registry) error {

	if err := validate.Required("contacts", "body", m.Contacts); err != nil {
		return err
	}

	if m.Contacts != nil {
		if err := m.Contacts.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("contacts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("contacts")
			}
			return err
		}
	}

	return nil
}

func (m *ContactsAddrbook) validateUpdated(formats strfmt.Registry) error {

	if err := validate.Required("updated", "body", m.Updated); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this contacts addrbook based on the context it is used
func (m *ContactsAddrbook) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateContacts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactsAddrbook) contextValidateContacts(ctx context.Context, formats strfmt.Registry) error {

	if m.Contacts != nil {
		if err := m.Contacts.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("contacts")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("contacts")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContactsAddrbook) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContactsAddrbook) UnmarshalBinary(b []byte) error {
	var res ContactsAddrbook
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
