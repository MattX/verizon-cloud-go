// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContactsTel contacts tel
//
// swagger:model contacts_tel
type ContactsTel struct {

	// When combined with 'type', provides a unique identifier for the entry
	// Required: true
	Indx *int64 `json:"indx"`

	// Telephone number
	// Required: true
	Number *string `json:"number"`

	// When sorting, lower numbers indicate a higher preference. The value must be less than 100.
	// Required: true
	Preference *int64 `json:"preference"`

	// Type of telephone number, i.e., 'assistant', 'businessfax', 'business', 'callback', 'car', 'companymain', 'homefax', 'home', 'mobile', 'otherfax', 'pager', 'primaryfax', 'primary', 'radio', 'school', 'telex', 'ttydd', 'videophone', 'voipphone', 'other'
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this contacts tel
func (m *ContactsTel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIndx(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePreference(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactsTel) validateIndx(formats strfmt.Registry) error {

	if err := validate.Required("indx", "body", m.Indx); err != nil {
		return err
	}

	return nil
}

func (m *ContactsTel) validateNumber(formats strfmt.Registry) error {

	if err := validate.Required("number", "body", m.Number); err != nil {
		return err
	}

	return nil
}

func (m *ContactsTel) validatePreference(formats strfmt.Registry) error {

	if err := validate.Required("preference", "body", m.Preference); err != nil {
		return err
	}

	return nil
}

func (m *ContactsTel) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this contacts tel based on context it is used
func (m *ContactsTel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ContactsTel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContactsTel) UnmarshalBinary(b []byte) error {
	var res ContactsTel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
