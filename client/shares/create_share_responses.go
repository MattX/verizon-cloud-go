// Code generated by go-swagger; DO NOT EDIT.

package shares

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MattX/verizon-cloud-go/client/models"
)

// CreateShareReader is a Reader for the CreateShare structure.
type CreateShareReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateShareReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateShareCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateShareBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateShareUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateShareForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewCreateShareServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateShareCreated creates a CreateShareCreated with default headers values
func NewCreateShareCreated() *CreateShareCreated {
	return &CreateShareCreated{}
}

/* CreateShareCreated describes a response with status code 201, with default header values.

Created
*/
type CreateShareCreated struct {
	Payload *models.CreateShareResponse
}

func (o *CreateShareCreated) Error() string {
	return fmt.Sprintf("[POST /shares][%d] createShareCreated  %+v", 201, o.Payload)
}
func (o *CreateShareCreated) GetPayload() *models.CreateShareResponse {
	return o.Payload
}

func (o *CreateShareCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateShareResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateShareBadRequest creates a CreateShareBadRequest with default headers values
func NewCreateShareBadRequest() *CreateShareBadRequest {
	return &CreateShareBadRequest{}
}

/* CreateShareBadRequest describes a response with status code 400, with default header values.

[Bad Request] Parameters missing or invalid.
*/
type CreateShareBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CreateShareBadRequest) Error() string {
	return fmt.Sprintf("[POST /shares][%d] createShareBadRequest  %+v", 400, o.Payload)
}
func (o *CreateShareBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateShareBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateShareUnauthorized creates a CreateShareUnauthorized with default headers values
func NewCreateShareUnauthorized() *CreateShareUnauthorized {
	return &CreateShareUnauthorized{}
}

/* CreateShareUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type CreateShareUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CreateShareUnauthorized) Error() string {
	return fmt.Sprintf("[POST /shares][%d] createShareUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateShareUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateShareUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateShareForbidden creates a CreateShareForbidden with default headers values
func NewCreateShareForbidden() *CreateShareForbidden {
	return &CreateShareForbidden{}
}

/* CreateShareForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type CreateShareForbidden struct {
	Payload *models.ErrorResponse
}

func (o *CreateShareForbidden) Error() string {
	return fmt.Sprintf("[POST /shares][%d] createShareForbidden  %+v", 403, o.Payload)
}
func (o *CreateShareForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateShareForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateShareServiceUnavailable creates a CreateShareServiceUnavailable with default headers values
func NewCreateShareServiceUnavailable() *CreateShareServiceUnavailable {
	return &CreateShareServiceUnavailable{}
}

/* CreateShareServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type CreateShareServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *CreateShareServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /shares][%d] createShareServiceUnavailable  %+v", 503, o.Payload)
}
func (o *CreateShareServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateShareServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
