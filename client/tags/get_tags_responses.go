// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mattx/verizon-cloud-go/models"
)

// GetTagsReader is a Reader for the GetTags structure.
type GetTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetTagsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTagsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetTagsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetTagsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTagsOK creates a GetTagsOK with default headers values
func NewGetTagsOK() *GetTagsOK {
	return &GetTagsOK{}
}

/* GetTagsOK describes a response with status code 200, with default header values.

A tags response object
*/
type GetTagsOK struct {
	Payload *models.TagsResponse
}

func (o *GetTagsOK) Error() string {
	return fmt.Sprintf("[GET /tags/{path}][%d] getTagsOK  %+v", 200, o.Payload)
}
func (o *GetTagsOK) GetPayload() *models.TagsResponse {
	return o.Payload
}

func (o *GetTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TagsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsNoContent creates a GetTagsNoContent with default headers values
func NewGetTagsNoContent() *GetTagsNoContent {
	return &GetTagsNoContent{}
}

/* GetTagsNoContent describes a response with status code 204, with default header values.

OK. [File or folder does not have any Tags defined.]
*/
type GetTagsNoContent struct {
}

func (o *GetTagsNoContent) Error() string {
	return fmt.Sprintf("[GET /tags/{path}][%d] getTagsNoContent ", 204)
}

func (o *GetTagsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsUnauthorized creates a GetTagsUnauthorized with default headers values
func NewGetTagsUnauthorized() *GetTagsUnauthorized {
	return &GetTagsUnauthorized{}
}

/* GetTagsUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type GetTagsUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetTagsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tags/{path}][%d] getTagsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetTagsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsForbidden creates a GetTagsForbidden with default headers values
func NewGetTagsForbidden() *GetTagsForbidden {
	return &GetTagsForbidden{}
}

/* GetTagsForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type GetTagsForbidden struct {
	Payload *models.ErrorResponse
}

func (o *GetTagsForbidden) Error() string {
	return fmt.Sprintf("[GET /tags/{path}][%d] getTagsForbidden  %+v", 403, o.Payload)
}
func (o *GetTagsForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsNotFound creates a GetTagsNotFound with default headers values
func NewGetTagsNotFound() *GetTagsNotFound {
	return &GetTagsNotFound{}
}

/* GetTagsNotFound describes a response with status code 404, with default header values.

[Not Found] File or folder was not found.
*/
type GetTagsNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetTagsNotFound) Error() string {
	return fmt.Sprintf("[GET /tags/{path}][%d] getTagsNotFound  %+v", 404, o.Payload)
}
func (o *GetTagsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTagsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsGone creates a GetTagsGone with default headers values
func NewGetTagsGone() *GetTagsGone {
	return &GetTagsGone{}
}

/* GetTagsGone describes a response with status code 410, with default header values.

[Gone] File or folder was removed.
*/
type GetTagsGone struct {
	Payload *models.ErrorResponse
}

func (o *GetTagsGone) Error() string {
	return fmt.Sprintf("[GET /tags/{path}][%d] getTagsGone  %+v", 410, o.Payload)
}
func (o *GetTagsGone) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTagsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsServiceUnavailable creates a GetTagsServiceUnavailable with default headers values
func NewGetTagsServiceUnavailable() *GetTagsServiceUnavailable {
	return &GetTagsServiceUnavailable{}
}

/* GetTagsServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type GetTagsServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *GetTagsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /tags/{path}][%d] getTagsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetTagsServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetTagsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
