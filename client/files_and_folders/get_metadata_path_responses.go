// Code generated by go-swagger; DO NOT EDIT.

package files_and_folders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MattX/verizon-cloud-go/models"
)

// GetMetadataPathReader is a Reader for the GetMetadataPath structure.
type GetMetadataPathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetadataPathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetadataPathOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMetadataPathBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMetadataPathUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMetadataPathForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMetadataPathNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetMetadataPathGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetMetadataPathServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMetadataPathOK creates a GetMetadataPathOK with default headers values
func NewGetMetadataPathOK() *GetMetadataPathOK {
	return &GetMetadataPathOK{}
}

/* GetMetadataPathOK describes a response with status code 200, with default header values.

A metadata response object
*/
type GetMetadataPathOK struct {
	Payload *models.MetadataResponse
}

func (o *GetMetadataPathOK) Error() string {
	return fmt.Sprintf("[GET /metadata/{path}][%d] getMetadataPathOK  %+v", 200, o.Payload)
}
func (o *GetMetadataPathOK) GetPayload() *models.MetadataResponse {
	return o.Payload
}

func (o *GetMetadataPathOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataPathBadRequest creates a GetMetadataPathBadRequest with default headers values
func NewGetMetadataPathBadRequest() *GetMetadataPathBadRequest {
	return &GetMetadataPathBadRequest{}
}

/* GetMetadataPathBadRequest describes a response with status code 400, with default header values.

[Bad Request] Query parameters missing or invalid.
*/
type GetMetadataPathBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetMetadataPathBadRequest) Error() string {
	return fmt.Sprintf("[GET /metadata/{path}][%d] getMetadataPathBadRequest  %+v", 400, o.Payload)
}
func (o *GetMetadataPathBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMetadataPathBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataPathUnauthorized creates a GetMetadataPathUnauthorized with default headers values
func NewGetMetadataPathUnauthorized() *GetMetadataPathUnauthorized {
	return &GetMetadataPathUnauthorized{}
}

/* GetMetadataPathUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type GetMetadataPathUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetMetadataPathUnauthorized) Error() string {
	return fmt.Sprintf("[GET /metadata/{path}][%d] getMetadataPathUnauthorized  %+v", 401, o.Payload)
}
func (o *GetMetadataPathUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMetadataPathUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataPathForbidden creates a GetMetadataPathForbidden with default headers values
func NewGetMetadataPathForbidden() *GetMetadataPathForbidden {
	return &GetMetadataPathForbidden{}
}

/* GetMetadataPathForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type GetMetadataPathForbidden struct {
	Payload *models.ErrorResponse
}

func (o *GetMetadataPathForbidden) Error() string {
	return fmt.Sprintf("[GET /metadata/{path}][%d] getMetadataPathForbidden  %+v", 403, o.Payload)
}
func (o *GetMetadataPathForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMetadataPathForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataPathNotFound creates a GetMetadataPathNotFound with default headers values
func NewGetMetadataPathNotFound() *GetMetadataPathNotFound {
	return &GetMetadataPathNotFound{}
}

/* GetMetadataPathNotFound describes a response with status code 404, with default header values.

[Not Found] File was not found.
*/
type GetMetadataPathNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetMetadataPathNotFound) Error() string {
	return fmt.Sprintf("[GET /metadata/{path}][%d] getMetadataPathNotFound  %+v", 404, o.Payload)
}
func (o *GetMetadataPathNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMetadataPathNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataPathGone creates a GetMetadataPathGone with default headers values
func NewGetMetadataPathGone() *GetMetadataPathGone {
	return &GetMetadataPathGone{}
}

/* GetMetadataPathGone describes a response with status code 410, with default header values.

[Gone] File was removed.
*/
type GetMetadataPathGone struct {
	Payload *models.ErrorResponse
}

func (o *GetMetadataPathGone) Error() string {
	return fmt.Sprintf("[GET /metadata/{path}][%d] getMetadataPathGone  %+v", 410, o.Payload)
}
func (o *GetMetadataPathGone) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMetadataPathGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataPathServiceUnavailable creates a GetMetadataPathServiceUnavailable with default headers values
func NewGetMetadataPathServiceUnavailable() *GetMetadataPathServiceUnavailable {
	return &GetMetadataPathServiceUnavailable{}
}

/* GetMetadataPathServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type GetMetadataPathServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *GetMetadataPathServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /metadata/{path}][%d] getMetadataPathServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetMetadataPathServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMetadataPathServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
