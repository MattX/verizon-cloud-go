// Code generated by go-swagger; DO NOT EDIT.

package files_and_folders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mattx/verizon-cloud-go/models"
)

// DeleteVirtualFolderReader is a Reader for the DeleteVirtualFolder structure.
type DeleteVirtualFolderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVirtualFolderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteVirtualFolderNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteVirtualFolderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteVirtualFolderUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVirtualFolderForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVirtualFolderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteVirtualFolderServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVirtualFolderNoContent creates a DeleteVirtualFolderNoContent with default headers values
func NewDeleteVirtualFolderNoContent() *DeleteVirtualFolderNoContent {
	return &DeleteVirtualFolderNoContent{}
}

/* DeleteVirtualFolderNoContent describes a response with status code 204, with default header values.

OK.
*/
type DeleteVirtualFolderNoContent struct {
}

func (o *DeleteVirtualFolderNoContent) Error() string {
	return fmt.Sprintf("[DELETE /virtualfolder][%d] deleteVirtualFolderNoContent ", 204)
}

func (o *DeleteVirtualFolderNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVirtualFolderBadRequest creates a DeleteVirtualFolderBadRequest with default headers values
func NewDeleteVirtualFolderBadRequest() *DeleteVirtualFolderBadRequest {
	return &DeleteVirtualFolderBadRequest{}
}

/* DeleteVirtualFolderBadRequest describes a response with status code 400, with default header values.

[Bad Request] Query parameters missing or invalid.
*/
type DeleteVirtualFolderBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *DeleteVirtualFolderBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /virtualfolder][%d] deleteVirtualFolderBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteVirtualFolderBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteVirtualFolderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualFolderUnauthorized creates a DeleteVirtualFolderUnauthorized with default headers values
func NewDeleteVirtualFolderUnauthorized() *DeleteVirtualFolderUnauthorized {
	return &DeleteVirtualFolderUnauthorized{}
}

/* DeleteVirtualFolderUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type DeleteVirtualFolderUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *DeleteVirtualFolderUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /virtualfolder][%d] deleteVirtualFolderUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteVirtualFolderUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteVirtualFolderUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualFolderForbidden creates a DeleteVirtualFolderForbidden with default headers values
func NewDeleteVirtualFolderForbidden() *DeleteVirtualFolderForbidden {
	return &DeleteVirtualFolderForbidden{}
}

/* DeleteVirtualFolderForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type DeleteVirtualFolderForbidden struct {
	Payload *models.ErrorResponse
}

func (o *DeleteVirtualFolderForbidden) Error() string {
	return fmt.Sprintf("[DELETE /virtualfolder][%d] deleteVirtualFolderForbidden  %+v", 403, o.Payload)
}
func (o *DeleteVirtualFolderForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteVirtualFolderForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualFolderNotFound creates a DeleteVirtualFolderNotFound with default headers values
func NewDeleteVirtualFolderNotFound() *DeleteVirtualFolderNotFound {
	return &DeleteVirtualFolderNotFound{}
}

/* DeleteVirtualFolderNotFound describes a response with status code 404, with default header values.

[Not Found] Resource not found.
*/
type DeleteVirtualFolderNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DeleteVirtualFolderNotFound) Error() string {
	return fmt.Sprintf("[DELETE /virtualfolder][%d] deleteVirtualFolderNotFound  %+v", 404, o.Payload)
}
func (o *DeleteVirtualFolderNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteVirtualFolderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVirtualFolderServiceUnavailable creates a DeleteVirtualFolderServiceUnavailable with default headers values
func NewDeleteVirtualFolderServiceUnavailable() *DeleteVirtualFolderServiceUnavailable {
	return &DeleteVirtualFolderServiceUnavailable{}
}

/* DeleteVirtualFolderServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type DeleteVirtualFolderServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *DeleteVirtualFolderServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /virtualfolder][%d] deleteVirtualFolderServiceUnavailable  %+v", 503, o.Payload)
}
func (o *DeleteVirtualFolderServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteVirtualFolderServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
