// Code generated by go-swagger; DO NOT EDIT.

package files_and_folders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mattx/verizon-cloud-go/models"
)

// NewPostCopyParams creates a new PostCopyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostCopyParams() *PostCopyParams {
	return &PostCopyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostCopyParamsWithTimeout creates a new PostCopyParams object
// with the ability to set a timeout on a request.
func NewPostCopyParamsWithTimeout(timeout time.Duration) *PostCopyParams {
	return &PostCopyParams{
		timeout: timeout,
	}
}

// NewPostCopyParamsWithContext creates a new PostCopyParams object
// with the ability to set a context for a request.
func NewPostCopyParamsWithContext(ctx context.Context) *PostCopyParams {
	return &PostCopyParams{
		Context: ctx,
	}
}

// NewPostCopyParamsWithHTTPClient creates a new PostCopyParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostCopyParamsWithHTTPClient(client *http.Client) *PostCopyParams {
	return &PostCopyParams{
		HTTPClient: client,
	}
}

/* PostCopyParams contains all the parameters to send to the API endpoint
   for the post copy operation.

   Typically these are written to a http.Request.
*/
type PostCopyParams struct {

	/* FileCopyRequest.

	   'safe', 'conflictsolve' and 'override' are optional parameters in the request object to copy a file/folder.
	*/
	FileCopyRequest *models.FopsCopyRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post copy params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostCopyParams) WithDefaults() *PostCopyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post copy params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostCopyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post copy params
func (o *PostCopyParams) WithTimeout(timeout time.Duration) *PostCopyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post copy params
func (o *PostCopyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post copy params
func (o *PostCopyParams) WithContext(ctx context.Context) *PostCopyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post copy params
func (o *PostCopyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post copy params
func (o *PostCopyParams) WithHTTPClient(client *http.Client) *PostCopyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post copy params
func (o *PostCopyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFileCopyRequest adds the fileCopyRequest to the post copy params
func (o *PostCopyParams) WithFileCopyRequest(fileCopyRequest *models.FopsCopyRequest) *PostCopyParams {
	o.SetFileCopyRequest(fileCopyRequest)
	return o
}

// SetFileCopyRequest adds the fileCopyRequest to the post copy params
func (o *PostCopyParams) SetFileCopyRequest(fileCopyRequest *models.FopsCopyRequest) {
	o.FileCopyRequest = fileCopyRequest
}

// WriteToRequest writes these params to a swagger request
func (o *PostCopyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.FileCopyRequest != nil {
		if err := r.SetBodyParam(o.FileCopyRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
