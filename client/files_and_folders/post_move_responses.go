// Code generated by go-swagger; DO NOT EDIT.

package files_and_folders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MattX/verizon-cloud-go/models"
)

// PostMoveReader is a Reader for the PostMove structure.
type PostMoveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMoveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostMoveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostMoveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostMoveUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostMoveForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostMoveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostMoveServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostMoveOK creates a PostMoveOK with default headers values
func NewPostMoveOK() *PostMoveOK {
	return &PostMoveOK{}
}

/* PostMoveOK describes a response with status code 200, with default header values.

OK
*/
type PostMoveOK struct {
	Payload *models.MetadataResponse
}

func (o *PostMoveOK) Error() string {
	return fmt.Sprintf("[POST /fops/move][%d] postMoveOK  %+v", 200, o.Payload)
}
func (o *PostMoveOK) GetPayload() *models.MetadataResponse {
	return o.Payload
}

func (o *PostMoveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetadataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMoveBadRequest creates a PostMoveBadRequest with default headers values
func NewPostMoveBadRequest() *PostMoveBadRequest {
	return &PostMoveBadRequest{}
}

/* PostMoveBadRequest describes a response with status code 400, with default header values.

[Bad Request] Query parameters missing or invalid.
*/
type PostMoveBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PostMoveBadRequest) Error() string {
	return fmt.Sprintf("[POST /fops/move][%d] postMoveBadRequest  %+v", 400, o.Payload)
}
func (o *PostMoveBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostMoveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMoveUnauthorized creates a PostMoveUnauthorized with default headers values
func NewPostMoveUnauthorized() *PostMoveUnauthorized {
	return &PostMoveUnauthorized{}
}

/* PostMoveUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type PostMoveUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *PostMoveUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fops/move][%d] postMoveUnauthorized  %+v", 401, o.Payload)
}
func (o *PostMoveUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostMoveUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMoveForbidden creates a PostMoveForbidden with default headers values
func NewPostMoveForbidden() *PostMoveForbidden {
	return &PostMoveForbidden{}
}

/* PostMoveForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type PostMoveForbidden struct {
	Payload *models.ErrorResponse
}

func (o *PostMoveForbidden) Error() string {
	return fmt.Sprintf("[POST /fops/move][%d] postMoveForbidden  %+v", 403, o.Payload)
}
func (o *PostMoveForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostMoveForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMoveNotFound creates a PostMoveNotFound with default headers values
func NewPostMoveNotFound() *PostMoveNotFound {
	return &PostMoveNotFound{}
}

/* PostMoveNotFound describes a response with status code 404, with default header values.

[Not Found] File was not found.
*/
type PostMoveNotFound struct {
	Payload *models.ErrorResponse
}

func (o *PostMoveNotFound) Error() string {
	return fmt.Sprintf("[POST /fops/move][%d] postMoveNotFound  %+v", 404, o.Payload)
}
func (o *PostMoveNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostMoveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMoveServiceUnavailable creates a PostMoveServiceUnavailable with default headers values
func NewPostMoveServiceUnavailable() *PostMoveServiceUnavailable {
	return &PostMoveServiceUnavailable{}
}

/* PostMoveServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type PostMoveServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *PostMoveServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /fops/move][%d] postMoveServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostMoveServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostMoveServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
