// Code generated by go-swagger; DO NOT EDIT.

package files_and_folders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MattX/verizon-cloud-go/models"
)

// GetSearchReader is a Reader for the GetSearch structure.
type GetSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSearchServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSearchOK creates a GetSearchOK with default headers values
func NewGetSearchOK() *GetSearchOK {
	return &GetSearchOK{}
}

/* GetSearchOK describes a response with status code 200, with default header values.

OK
*/
type GetSearchOK struct {
	Payload *models.SearchresultResponse
}

func (o *GetSearchOK) Error() string {
	return fmt.Sprintf("[GET /search][%d] getSearchOK  %+v", 200, o.Payload)
}
func (o *GetSearchOK) GetPayload() *models.SearchresultResponse {
	return o.Payload
}

func (o *GetSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchresultResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchBadRequest creates a GetSearchBadRequest with default headers values
func NewGetSearchBadRequest() *GetSearchBadRequest {
	return &GetSearchBadRequest{}
}

/* GetSearchBadRequest describes a response with status code 400, with default header values.

[Bad Request] Query parameters missing or invalid.
*/
type GetSearchBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetSearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /search][%d] getSearchBadRequest  %+v", 400, o.Payload)
}
func (o *GetSearchBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchUnauthorized creates a GetSearchUnauthorized with default headers values
func NewGetSearchUnauthorized() *GetSearchUnauthorized {
	return &GetSearchUnauthorized{}
}

/* GetSearchUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type GetSearchUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetSearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /search][%d] getSearchUnauthorized  %+v", 401, o.Payload)
}
func (o *GetSearchUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchForbidden creates a GetSearchForbidden with default headers values
func NewGetSearchForbidden() *GetSearchForbidden {
	return &GetSearchForbidden{}
}

/* GetSearchForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type GetSearchForbidden struct {
	Payload *models.ErrorResponse
}

func (o *GetSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /search][%d] getSearchForbidden  %+v", 403, o.Payload)
}
func (o *GetSearchForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchNotFound creates a GetSearchNotFound with default headers values
func NewGetSearchNotFound() *GetSearchNotFound {
	return &GetSearchNotFound{}
}

/* GetSearchNotFound describes a response with status code 404, with default header values.

[Not Found] File or folder was not found.
*/
type GetSearchNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetSearchNotFound) Error() string {
	return fmt.Sprintf("[GET /search][%d] getSearchNotFound  %+v", 404, o.Payload)
}
func (o *GetSearchNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchServiceUnavailable creates a GetSearchServiceUnavailable with default headers values
func NewGetSearchServiceUnavailable() *GetSearchServiceUnavailable {
	return &GetSearchServiceUnavailable{}
}

/* GetSearchServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type GetSearchServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *GetSearchServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /search][%d] getSearchServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetSearchServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetSearchServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
