// Code generated by go-swagger; DO NOT EDIT.

package account_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mattx/verizon-cloud-go/client/models"
)

// GetAccountReader is a Reader for the GetAccount structure.
type GetAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAccountServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccountOK creates a GetAccountOK with default headers values
func NewGetAccountOK() *GetAccountOK {
	return &GetAccountOK{}
}

/* GetAccountOK describes a response with status code 200, with default header values.

OK
*/
type GetAccountOK struct {
	Payload *models.AccountResponse
}

func (o *GetAccountOK) Error() string {
	return fmt.Sprintf("[GET /account][%d] getAccountOK  %+v", 200, o.Payload)
}
func (o *GetAccountOK) GetPayload() *models.AccountResponse {
	return o.Payload
}

func (o *GetAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountUnauthorized creates a GetAccountUnauthorized with default headers values
func NewGetAccountUnauthorized() *GetAccountUnauthorized {
	return &GetAccountUnauthorized{}
}

/* GetAccountUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type GetAccountUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetAccountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /account][%d] getAccountUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAccountUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountForbidden creates a GetAccountForbidden with default headers values
func NewGetAccountForbidden() *GetAccountForbidden {
	return &GetAccountForbidden{}
}

/* GetAccountForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type GetAccountForbidden struct {
	Payload *models.ErrorResponse
}

func (o *GetAccountForbidden) Error() string {
	return fmt.Sprintf("[GET /account][%d] getAccountForbidden  %+v", 403, o.Payload)
}
func (o *GetAccountForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountServiceUnavailable creates a GetAccountServiceUnavailable with default headers values
func NewGetAccountServiceUnavailable() *GetAccountServiceUnavailable {
	return &GetAccountServiceUnavailable{}
}

/* GetAccountServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type GetAccountServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *GetAccountServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /account][%d] getAccountServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetAccountServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetAccountServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
