// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MattX/verizon-cloud-go/client/models"
)

// GetContactsReader is a Reader for the GetContacts structure.
type GetContactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContactsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContactsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetContactsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContactsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetContactsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetContactsOK creates a GetContactsOK with default headers values
func NewGetContactsOK() *GetContactsOK {
	return &GetContactsOK{}
}

/* GetContactsOK describes a response with status code 200, with default header values.

OK
*/
type GetContactsOK struct {
	Payload *models.Contacts
}

func (o *GetContactsOK) Error() string {
	return fmt.Sprintf("[GET /contacts][%d] getContactsOK  %+v", 200, o.Payload)
}
func (o *GetContactsOK) GetPayload() *models.Contacts {
	return o.Payload
}

func (o *GetContactsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Contacts)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactsBadRequest creates a GetContactsBadRequest with default headers values
func NewGetContactsBadRequest() *GetContactsBadRequest {
	return &GetContactsBadRequest{}
}

/* GetContactsBadRequest describes a response with status code 400, with default header values.

[Bad Request] Query parameters missing or invalid.
*/
type GetContactsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetContactsBadRequest) Error() string {
	return fmt.Sprintf("[GET /contacts][%d] getContactsBadRequest  %+v", 400, o.Payload)
}
func (o *GetContactsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetContactsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactsUnauthorized creates a GetContactsUnauthorized with default headers values
func NewGetContactsUnauthorized() *GetContactsUnauthorized {
	return &GetContactsUnauthorized{}
}

/* GetContactsUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type GetContactsUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetContactsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /contacts][%d] getContactsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetContactsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetContactsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactsInternalServerError creates a GetContactsInternalServerError with default headers values
func NewGetContactsInternalServerError() *GetContactsInternalServerError {
	return &GetContactsInternalServerError{}
}

/* GetContactsInternalServerError describes a response with status code 500, with default header values.

Unexpected Account configuration.
*/
type GetContactsInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetContactsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /contacts][%d] getContactsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetContactsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetContactsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactsServiceUnavailable creates a GetContactsServiceUnavailable with default headers values
func NewGetContactsServiceUnavailable() *GetContactsServiceUnavailable {
	return &GetContactsServiceUnavailable{}
}

/* GetContactsServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type GetContactsServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *GetContactsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /contacts][%d] getContactsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetContactsServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetContactsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
