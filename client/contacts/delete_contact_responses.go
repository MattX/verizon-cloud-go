// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mattx/verizon-cloud-go/client/models"
)

// DeleteContactReader is a Reader for the DeleteContact structure.
type DeleteContactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteContactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteContactNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteContactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteContactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteContactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteContactServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteContactNoContent creates a DeleteContactNoContent with default headers values
func NewDeleteContactNoContent() *DeleteContactNoContent {
	return &DeleteContactNoContent{}
}

/* DeleteContactNoContent describes a response with status code 204, with default header values.

OK
*/
type DeleteContactNoContent struct {
}

func (o *DeleteContactNoContent) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{contactID}][%d] deleteContactNoContent ", 204)
}

func (o *DeleteContactNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteContactBadRequest creates a DeleteContactBadRequest with default headers values
func NewDeleteContactBadRequest() *DeleteContactBadRequest {
	return &DeleteContactBadRequest{}
}

/* DeleteContactBadRequest describes a response with status code 400, with default header values.

[Bad Request] Query parameters missing or invalid.
*/
type DeleteContactBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *DeleteContactBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{contactID}][%d] deleteContactBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteContactBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteContactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContactUnauthorized creates a DeleteContactUnauthorized with default headers values
func NewDeleteContactUnauthorized() *DeleteContactUnauthorized {
	return &DeleteContactUnauthorized{}
}

/* DeleteContactUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type DeleteContactUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *DeleteContactUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{contactID}][%d] deleteContactUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteContactUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteContactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContactNotFound creates a DeleteContactNotFound with default headers values
func NewDeleteContactNotFound() *DeleteContactNotFound {
	return &DeleteContactNotFound{}
}

/* DeleteContactNotFound describes a response with status code 404, with default header values.

[Not Found] Resource not found.
*/
type DeleteContactNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DeleteContactNotFound) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{contactID}][%d] deleteContactNotFound  %+v", 404, o.Payload)
}
func (o *DeleteContactNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteContactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContactServiceUnavailable creates a DeleteContactServiceUnavailable with default headers values
func NewDeleteContactServiceUnavailable() *DeleteContactServiceUnavailable {
	return &DeleteContactServiceUnavailable{}
}

/* DeleteContactServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type DeleteContactServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *DeleteContactServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /contacts/{contactID}][%d] deleteContactServiceUnavailable  %+v", 503, o.Payload)
}
func (o *DeleteContactServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteContactServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
