// Code generated by go-swagger; DO NOT EDIT.

package favorites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new favorites API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for favorites API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteFavorites(params *DeleteFavoritesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteFavoritesNoContent, error)

	GetFavorites(params *GetFavoritesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetFavoritesOK, error)

	UpdateFavorites(params *UpdateFavoritesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateFavoritesNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteFavorites unmarks file or folder as favorites

  Unmark file or folder as favorites
*/
func (a *Client) DeleteFavorites(params *DeleteFavoritesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteFavoritesNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteFavoritesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "delete_favorites",
		Method:             "DELETE",
		PathPattern:        "/favorites",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteFavoritesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteFavoritesNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for delete_favorites: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetFavorites gets the list of favorite files or folders

  Fetch the list of favorite files or folders under the specified virtual folder sorted by last modified date.
*/
func (a *Client) GetFavorites(params *GetFavoritesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetFavoritesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetFavoritesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_favorites",
		Method:             "GET",
		PathPattern:        "/favorites",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetFavoritesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetFavoritesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_favorites: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateFavorites marks files or folders as favorites

  Mark the list of files or folders as favorites
*/
func (a *Client) UpdateFavorites(params *UpdateFavoritesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateFavoritesNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateFavoritesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "update_favorites",
		Method:             "PUT",
		PathPattern:        "/favorites",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateFavoritesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateFavoritesNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for update_favorites: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
