// Code generated by go-swagger; DO NOT EDIT.

package favorites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteFavoritesParams creates a new DeleteFavoritesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteFavoritesParams() *DeleteFavoritesParams {
	return &DeleteFavoritesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteFavoritesParamsWithTimeout creates a new DeleteFavoritesParams object
// with the ability to set a timeout on a request.
func NewDeleteFavoritesParamsWithTimeout(timeout time.Duration) *DeleteFavoritesParams {
	return &DeleteFavoritesParams{
		timeout: timeout,
	}
}

// NewDeleteFavoritesParamsWithContext creates a new DeleteFavoritesParams object
// with the ability to set a context for a request.
func NewDeleteFavoritesParamsWithContext(ctx context.Context) *DeleteFavoritesParams {
	return &DeleteFavoritesParams{
		Context: ctx,
	}
}

// NewDeleteFavoritesParamsWithHTTPClient creates a new DeleteFavoritesParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteFavoritesParamsWithHTTPClient(client *http.Client) *DeleteFavoritesParams {
	return &DeleteFavoritesParams{
		HTTPClient: client,
	}
}

/* DeleteFavoritesParams contains all the parameters to send to the API endpoint
   for the delete favorites operation.

   Typically these are written to a http.Request.
*/
type DeleteFavoritesParams struct {

	/* CreateVersion.

	   If 'true', creates a new version of the file or folder. Defaults to 'false'.
	*/
	CreateVersion *bool

	/* URI.

	   URI of the resource. This is a URI value obtained from a fullview or metadata response
	*/
	URI string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete favorites params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteFavoritesParams) WithDefaults() *DeleteFavoritesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete favorites params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteFavoritesParams) SetDefaults() {
	var (
		createVersionDefault = bool(false)
	)

	val := DeleteFavoritesParams{
		CreateVersion: &createVersionDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the delete favorites params
func (o *DeleteFavoritesParams) WithTimeout(timeout time.Duration) *DeleteFavoritesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete favorites params
func (o *DeleteFavoritesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete favorites params
func (o *DeleteFavoritesParams) WithContext(ctx context.Context) *DeleteFavoritesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete favorites params
func (o *DeleteFavoritesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete favorites params
func (o *DeleteFavoritesParams) WithHTTPClient(client *http.Client) *DeleteFavoritesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete favorites params
func (o *DeleteFavoritesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateVersion adds the createVersion to the delete favorites params
func (o *DeleteFavoritesParams) WithCreateVersion(createVersion *bool) *DeleteFavoritesParams {
	o.SetCreateVersion(createVersion)
	return o
}

// SetCreateVersion adds the createVersion to the delete favorites params
func (o *DeleteFavoritesParams) SetCreateVersion(createVersion *bool) {
	o.CreateVersion = createVersion
}

// WithURI adds the uri to the delete favorites params
func (o *DeleteFavoritesParams) WithURI(uri string) *DeleteFavoritesParams {
	o.SetURI(uri)
	return o
}

// SetURI adds the uri to the delete favorites params
func (o *DeleteFavoritesParams) SetURI(uri string) {
	o.URI = uri
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteFavoritesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CreateVersion != nil {

		// query param createVersion
		var qrCreateVersion bool

		if o.CreateVersion != nil {
			qrCreateVersion = *o.CreateVersion
		}
		qCreateVersion := swag.FormatBool(qrCreateVersion)
		if qCreateVersion != "" {

			if err := r.SetQueryParam("createVersion", qCreateVersion); err != nil {
				return err
			}
		}
	}

	// query param uri
	qrURI := o.URI
	qURI := qrURI
	if qURI != "" {

		if err := r.SetQueryParam("uri", qURI); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
