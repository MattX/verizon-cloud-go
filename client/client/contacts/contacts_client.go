// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new contacts API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for contacts API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateContacts(params *CreateContactsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateContactsCreated, error)

	DeleteContact(params *DeleteContactParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteContactNoContent, error)

	GetContactDelta(params *GetContactDeltaParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetContactDeltaOK, *GetContactDeltaNoContent, error)

	GetContacts(params *GetContactsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetContactsOK, error)

	UpdateContact(params *UpdateContactParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateContactOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateContacts creates contacts

  Creates a contact in the account.
*/
func (a *Client) CreateContacts(params *CreateContactsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateContactsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateContactsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "create_contacts",
		Method:             "POST",
		PathPattern:        "/contacts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateContactsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateContactsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for create_contacts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteContact deletes a contact

  Delete a specific contact.
*/
func (a *Client) DeleteContact(params *DeleteContactParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteContactNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteContactParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "delete_contact",
		Method:             "DELETE",
		PathPattern:        "/contacts/{contactID}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteContactReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteContactNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for delete_contact: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetContactDelta retrieves address book changes

  Retrieves complete or sub-set of contacts which are added/modified/deleted from a specific date.
*/
func (a *Client) GetContactDelta(params *GetContactDeltaParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetContactDeltaOK, *GetContactDeltaNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetContactDeltaParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_contact_delta",
		Method:             "GET",
		PathPattern:        "/contacthistory",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetContactDeltaReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *GetContactDeltaOK:
		return value, nil, nil
	case *GetContactDeltaNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for contacts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetContacts retrieves contacts

  Retrieves complete or sub-set of contacts.
*/
func (a *Client) GetContacts(params *GetContactsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetContactsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetContactsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "get_contacts",
		Method:             "GET",
		PathPattern:        "/contacts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetContactsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetContactsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get_contacts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateContact updates a contact

  Update a specific contact.
*/
func (a *Client) UpdateContact(params *UpdateContactParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateContactOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateContactParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "update_contact",
		Method:             "PUT",
		PathPattern:        "/contacts/{contactID}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateContactReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateContactOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for update_contact: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
