// Code generated by go-swagger; DO NOT EDIT.

package favorites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mattx/verizon-cloud-go/client/models"
)

// UpdateFavoritesReader is a Reader for the UpdateFavorites structure.
type UpdateFavoritesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFavoritesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateFavoritesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateFavoritesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateFavoritesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateFavoritesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateFavoritesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewUpdateFavoritesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateFavoritesNoContent creates a UpdateFavoritesNoContent with default headers values
func NewUpdateFavoritesNoContent() *UpdateFavoritesNoContent {
	return &UpdateFavoritesNoContent{}
}

/* UpdateFavoritesNoContent describes a response with status code 204, with default header values.

OK. [Files or folders have been marked as favorites.]
*/
type UpdateFavoritesNoContent struct {
}

func (o *UpdateFavoritesNoContent) Error() string {
	return fmt.Sprintf("[PUT /favorites][%d] updateFavoritesNoContent ", 204)
}

func (o *UpdateFavoritesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFavoritesBadRequest creates a UpdateFavoritesBadRequest with default headers values
func NewUpdateFavoritesBadRequest() *UpdateFavoritesBadRequest {
	return &UpdateFavoritesBadRequest{}
}

/* UpdateFavoritesBadRequest describes a response with status code 400, with default header values.

[Bad Request] Query parameters missing or invalid.
*/
type UpdateFavoritesBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateFavoritesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /favorites][%d] updateFavoritesBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateFavoritesBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateFavoritesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFavoritesUnauthorized creates a UpdateFavoritesUnauthorized with default headers values
func NewUpdateFavoritesUnauthorized() *UpdateFavoritesUnauthorized {
	return &UpdateFavoritesUnauthorized{}
}

/* UpdateFavoritesUnauthorized describes a response with status code 401, with default header values.

[Unauthorized] Bearer token is missing, expired, or invalid.
*/
type UpdateFavoritesUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *UpdateFavoritesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /favorites][%d] updateFavoritesUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateFavoritesUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateFavoritesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFavoritesForbidden creates a UpdateFavoritesForbidden with default headers values
func NewUpdateFavoritesForbidden() *UpdateFavoritesForbidden {
	return &UpdateFavoritesForbidden{}
}

/* UpdateFavoritesForbidden describes a response with status code 403, with default header values.

[Forbidden] User is not authorized to access storage APIs.
*/
type UpdateFavoritesForbidden struct {
	Payload *models.ErrorResponse
}

func (o *UpdateFavoritesForbidden) Error() string {
	return fmt.Sprintf("[PUT /favorites][%d] updateFavoritesForbidden  %+v", 403, o.Payload)
}
func (o *UpdateFavoritesForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateFavoritesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFavoritesNotFound creates a UpdateFavoritesNotFound with default headers values
func NewUpdateFavoritesNotFound() *UpdateFavoritesNotFound {
	return &UpdateFavoritesNotFound{}
}

/* UpdateFavoritesNotFound describes a response with status code 404, with default header values.

[Not Found] File or folder was not found.
*/
type UpdateFavoritesNotFound struct {
	Payload *models.ErrorResponse
}

func (o *UpdateFavoritesNotFound) Error() string {
	return fmt.Sprintf("[PUT /favorites][%d] updateFavoritesNotFound  %+v", 404, o.Payload)
}
func (o *UpdateFavoritesNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateFavoritesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFavoritesServiceUnavailable creates a UpdateFavoritesServiceUnavailable with default headers values
func NewUpdateFavoritesServiceUnavailable() *UpdateFavoritesServiceUnavailable {
	return &UpdateFavoritesServiceUnavailable{}
}

/* UpdateFavoritesServiceUnavailable describes a response with status code 503, with default header values.

[Service Unavailable] See response body for more detail.
*/
type UpdateFavoritesServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *UpdateFavoritesServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /favorites][%d] updateFavoritesServiceUnavailable  %+v", 503, o.Payload)
}
func (o *UpdateFavoritesServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateFavoritesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
